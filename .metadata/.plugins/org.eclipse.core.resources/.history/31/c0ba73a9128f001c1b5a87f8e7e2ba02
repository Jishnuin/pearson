package com.pearson.store_backend.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.pearson.store_backend.dto.Store;
import com.pearson.store_backend.dto.StoreResponse;
import com.pearson.store_backend.service.StoreService;

@RestController
@RequestMapping("/api/v1/stores")
public class StoreController {
	@Autowired
	private StoreService service;

	@GetMapping("/{id}")
	public ResponseEntity<StoreResponse> fetch(@PathVariable("id") String id) {
		StoreResponse response = new StoreResponse();
		Store store = service.fetch(id);
		if (store != null) {
//			response.setStatusCode(200);
			response.setError(false);
			response.setMsg("The data available are:");
			response.setStore(store);
			return new ResponseEntity<StoreResponse>(response, HttpStatus.OK);
		} else {
//			response.setStatusCode(404);
			response.setError(true);
			response.setMsg("No data available");
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}
//		return response;
	}
	

	@GetMapping("/sort/{sort}")
	public ResponseEntity<StoreResponse> fetchAll(@PathVariable String sort) {
		StoreResponse response = new StoreResponse();
		List<Store> store = service.fetchAll(sort);
		if (store != null) {
//			response.setStatusCode(200);
			response.setError(false);
			response.setMsg("The data available are:");
			response.setStore(store);
			return new ResponseEntity<StoreResponse>(response, HttpStatus.OK);
		} else {
//			response.setStatusCode(404);
			response.setError(true);
			response.setMsg("No data available");
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}
//		return response;
	}

}
